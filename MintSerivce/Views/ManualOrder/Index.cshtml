@model MintSerivce.Models.ManualOrderModel
@{
    ViewBag.Title = "Index";
}
<div class="container" style="width:100%; padding-top:15px">

    <ul class="nav nav-tabs" style="padding-top:15px;" id="myTab">
        <li class="active"><a data-toggle="tab" href="#MORDER">MANUAL ORDER</a></li>
        <li><a data-toggle="tab" href="#RORDER">RETURN ORDER</a></li>
        <li><a data-toggle="tab" href="#CORDER">CANCEL ORDER</a></li>
    </ul>
    <div class="tab-content" style="border-width:thin;border-style:solid;border-color:gray;width:100%;padding-top:5px;">
        <div class="form-group" style="padding-left:20px;color:orange;width:auto;align-items:center;text-align:center;">
            @*@if (Model.ResultMessage != null)
                {
                    <p><h5> @Model.ResultMessage</h5></p>
                }*@
        </div>
        <div id="MORDER" class="tab-pane fade in active" role="tabpanel" style="text-align:left;padding-left:20px;">

            @using (Html.BeginForm("#", "#", FormMethod.Post))
            {
                <div class="container" style="padding-top:20px;color:gray">

                    <div>
                        @if (TempData["ManualOrder"] != null)
                        {
                            <h6 style="color:green;text-align:center">@TempData["ManualOrder"].ToString()</h6>
                        }
                        @if (TempData["OrderError"] != null)
                        {
                            <h6 style="color:red;text-align:center">@TempData["OrderError"].ToString()</h6>
                        }
                    </div>
                    <div class="col-sm-6" style="padding-top:20px;">
                        <label>TIABOrderID:</label>
                        @Html.EditorFor(model => model.TIABOrderID, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                    </div>
                    <div class="col-sm-6" style="padding-top:20px;">
                        <label>VerserOrderID:</label>
                        @Html.EditorFor(model => model.VerserOrderID, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                    </div>
                    <div class="col-sm-6">
                        <label>FirstName:</label>
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Surname:</label>
                        @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Surname, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Salutation:</label>
                        @Html.EditorFor(model => model.Salutation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Salutation, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>AddressLine1:</label>
                        @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressLine1, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Suburb:</label>
                        @Html.EditorFor(model => model.Locality, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Locality, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>State:</label>
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.State, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Postcode:</label>
                        @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Postcode, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>SKU:</label>
                        @Html.EditorFor(model => model.SKU, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SKU, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>ContactNumber:</label>
                        @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactNumber, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>OrderType:</label>
                        @Html.EditorFor(model => model.OrderType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OrderType, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <button type="submit" class="btn btn-primary">Complete Order</button>
                    </div>
                </div>
            }

        </div>

        <div id="RORDER" class="tab-pane fade" role="tabpanel">

            @using (Html.BeginForm("ReturnedOrder", "ManualOrder", FormMethod.Post))
            {
                <div class="container" style="padding-top:20px;color:gray">
                    <div>
                        @if (TempData["ManualOrder"] != null)
                        {
                            <h6 style="color:green;text-align:center">@TempData["ManualOrder"].ToString()</h6>
                        }
                        @if (TempData["OrderError"] != null)
                        {
                            <h6 style="color:red;text-align:center">@TempData["OrderError"].ToString()</h6>
                        }
                    </div>
                    <div class="col-sm-6" style="padding-top:20px;">
                        <label>TIABOrderID:</label>
                        @Html.EditorFor(model => model.TIABOrderID, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                        @Html.ValidationMessageFor(model => model.TIABOrderID, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6" style="padding-top:20px;">
                        <label>VerserOrderID:</label>
                        @Html.EditorFor(model => model.VerserOrderID, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                        @Html.ValidationMessageFor(model => model.VerserOrderID, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>FirstName:</label>
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Surname:</label>
                        @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Surname, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Salutation:</label>
                        @Html.EditorFor(model => model.Salutation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Salutation, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>AddressLine1:</label>
                        @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressLine1, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Suburb:</label>
                        @Html.EditorFor(model => model.Locality, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Locality, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>State:</label>
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.State, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Postcode:</label>
                        @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Postcode, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>SKU:</label>
                        @Html.EditorFor(model => model.SKU, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SKU, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>ContactNumber:</label>
                        @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactNumber, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>OrderType:</label>
                        @Html.EditorFor(model => model.OrderType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OrderType, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <button type="submit" class="btn btn-primary">Complete Return Order</button>
                    </div>
                </div>
            }
        </div>
        <div id="CORDER" class="tab-pane fade" role="tabpanel" style="padding-left:20px;">
            <div class="form-horizontal">
                @using (Html.BeginForm("CancelOrder", "ManualOrder", FormMethod.Post))
                {
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                      
                        @Html.DropDownListFor(model => Model.VerserOrderID, Model.OrdersListItemModel, "Select Verser Order", new { @class = "form-control", @id = "ddlOrderID", @multiple = "multiple" })<br /><br />
                        <div class="col-md-10">
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Cancel Order" class="btn btn-default" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<link href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.1.1/css/mdb.min.css" rel="stylesheet">
@*<link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha.3/css/bootstrap.min.css" rel="stylesheet">*@
<link href="~/Content/bootstrap-3.1.4.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.4.1.js"></script>
<script src="~/Scripts/bootstrap-multiselect.js"></script>
<link href="~/Scripts/bootstrap-multiselect.css" rel="stylesheet" />
<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.2/themes/smoothness/jquery-ui.css" />

<link href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.1.1/css/mdb.min.css" rel="stylesheet">

@section scripts
    {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    $('#ddlOrderID').multiselect({
        includeSelectAllOption: false,
        maxHeight: 280,
        buttonWidth: '370px',
        enableFiltering: true,
        enableCaseInsensitiveFiltering: true
    });
    $('#ddlOrderID').removeAttr('multiple')
    $('#ddlOrderID').multiselect('rebuild');
</script>
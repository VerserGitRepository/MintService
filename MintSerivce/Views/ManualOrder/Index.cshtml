@model MintSerivce.Models.ManualOrderModel
@{
    ViewBag.Title = "Index";
}
<div class="container" style="width:100%; padding-top:15px">

    <ul class="nav nav-tabs" style="padding-top:15px;" id="myTab">
        <li class="active"><a data-toggle="tab" href="#MORDER">MANUAL ORDER</a></li>
        <li><a data-toggle="tab" href="#RORDER">RETURN & REPLACE</a></li>
        <li><a data-toggle="tab" href="#OHORDER">UPDATE ON HOLD</a></li>
        <li><a data-toggle="tab" href="#ONORDER">UPDATE  ON ORDER</a></li>
        <li><a data-toggle="tab" href="#CORDER">CANCEL ORDER</a></li>
        <li><a data-toggle="tab" href="#SIMACTIVATE">SIM REACTIVATE</a></li>
        <li><a data-toggle="tab" href="#SHOPIFYORDS">SHOPIFY ORDER</a></li>
    </ul>
    <div class="tab-content" style="border-width:thin;border-style:solid;border-color:gray;width:110%;padding-top:5px;">
       
         @*<div class="form-group" style="padding-left:20px;color:orange;width:auto;align-items:center;text-align:center;">
            @if (Model.ResultMessage != null)
                {
                    <p><h5> @Model.ResultMessage</h5></p>
                }
        </div>*@
        <input class="hidden" type="text" id="hdnTabOrder" value="@TempData["TabOrder"]" />
        <div id="MORDER" class="tab-pane fade in active" role="tabpanel" style="text-align:left;padding-left:20px;">

            @using (Html.BeginForm("Index", "ManualOrder", FormMethod.Post))
            {
                <div class="container" style="padding-top:20px;color:gray">

                    <div>
                        @if (TempData["ManualOrder"] != null)
                        {
                            <h6 style="color:green;text-align:center">@TempData["ManualOrder"].ToString()</h6>
                        }
                        @if (TempData["OrderError"] != null)
                        {
                            <h6 style="color:red;text-align:center">@TempData["OrderError"].ToString()</h6>
                        }
                    </div>
                    <div class="col-sm-6" style="padding-top:20px;">
                        <label>TIABOrderID:</label>
                        @Html.EditorFor(model => model.TIABOrderID, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                    </div>
                    <div class="col-sm-6" style="padding-top:20px;">
                        <label>VerserOrderID:</label>
                        @Html.EditorFor(model => model.VerserOrderID, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                    </div>
                    <div class="col-sm-6">
                        <label>FirstName:</label>
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Surname:</label>
                        @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Surname, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Salutation:</label>
                        @Html.EditorFor(model => model.Salutation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Salutation, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>AddressLine1:</label>
                        @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressLine1, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Suburb:</label>
                        @Html.EditorFor(model => model.Locality, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Locality, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>State:</label>
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.State, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Postcode:</label>
                        @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Postcode, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>SKU:</label>
                        @Html.EditorFor(model => model.SKU, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SKU, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>ContactNumber:</label>
                        @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactNumber, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>OrderType:</label>
                        @Html.EditorFor(model => model.OrderType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OrderType, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <button type="submit" class="btn btn-primary">Complete Order</button>
                    </div>
                </div>
            }

        </div>

        <div id="RORDER" class="tab-pane fade" role="tabpanel">
            <input type="checkbox" checked data-toggle="toggle" data-on="Show Return Order" data-off="Hide Return Order" data-onstyle="success" data-offstyle="danger" id="showhideReturnOrder" onchange="HideShowModal();">

            @using (Html.BeginForm("ReturnedOrder", "ManualOrder", FormMethod.Post))
            {

                <div class="container" style="padding-top:20px;color:gray">
                    <div>
                        @if (TempData["ManualOrder"] != null)
                        {
                            <h6 style="color:green;text-align:center">@TempData["ManualOrder"].ToString()</h6>
                        }
                        @if (TempData["OrderError"] != null)
                        {
                            <h6 style="color:red;text-align:center">@TempData["OrderError"].ToString()</h6>
                        }
                    </div>
                    <div class="col-sm-6" style="padding-top:20px;">
                        <label>Customer ID:</label>
                        @Html.EditorFor(model => model.TIABOrderID, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                        @Html.ValidationMessageFor(model => model.TIABOrderID, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6" style="padding-top:20px;">
                        <label>VerserOrderID:</label>
                        @Html.EditorFor(model => model.VerserOrderID, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                        @Html.ValidationMessageFor(model => model.VerserOrderID, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>FirstName:</label>
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Surname:</label>
                        @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Surname, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Salutation:</label>
                        @Html.EditorFor(model => model.Salutation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Salutation, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>AddressLine1:</label>
                        @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressLine1, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Suburb:</label>
                        @Html.EditorFor(model => model.Locality, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Locality, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>State:</label>
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.State, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Postcode:</label>
                        @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Postcode, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>SKU:</label>
                        @Html.EditorFor(model => model.SKU, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SKU, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>ContactNumber:</label>
                        @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactNumber, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>OrderType:</label>
                        @Html.EditorFor(model => model.OrderType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OrderType, null, new { @class = "text-danger" })
                    </div>
                    @*<div class="col-sm-6">
                            <label>Replacement ?&nbsp;&nbsp;</label>
                            @Html.CheckBoxFor(model => model.IsReplacement, new { style = "transform: scale(2.0);-webkit-transform: scale(2.0);" } )

                        </div>*@
                    <div class="col-sm-6">
                        <button type="submit" class="btn btn-primary">Complete Return Order</button>
                    </div>
                    <br />
                </div>
            }
        </div>
        <div id="CORDER" class="tab-pane fade" role="tabpanel" style="padding-left:20px;">
            <div class="form-horizontal">
                @using (Html.BeginForm("CancelOrder", "ManualOrder", FormMethod.Post))
                {
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">

                        @Html.DropDownListFor(model => Model.VerserOrderID, Model.OrdersListItemModel, "Select Verser Order", new { @class = "form-control", @id = "ddlOrderID", @multiple = "multiple" })<br /><br />
                        <div class="col-md-10">
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Cancel Order" class="btn btn-default" />
                        </div>
                    </div>
                }
            </div>
        </div>

        <div id="OHORDER" class="tab-pane fade" role="tabpanel" style="padding-left:20px;">
            <div class="form-horizontal">
                @using (Html.BeginForm("OrderPutOnHold", "ManualOrder", FormMethod.Post))
                {
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">

                        @Html.DropDownListFor(model => Model.VerserOrderID, Model.OrdersListItemModel, "Select Verser Order", new { @class = "form-control", @id = "ddlohOrderID", @multiple = "multiple" })<br /><br />
                        <div class="col-md-10">
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="UPDATE" class="btn btn-default" />
                        </div>
                    </div>
                }
            </div>
        </div>
        <div id="ONORDER" class="tab-pane fade" role="tabpanel" style="padding-left:20px;">
            <div class="form-horizontal">
                @using (Html.BeginForm("UpdateToOnOrder", "ManualOrder", FormMethod.Post))
                {
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">

                        @Html.DropDownListFor(model => Model.VerserOrderID, Model.OrdersListItemModel, "Select Verser Order", new { @class = "form-control", @id = "ddlONOrderID", @multiple = "multiple" })<br /><br />
                        <div class="col-md-10">
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="UPDATE" class="btn btn-default" />
                        </div>
                    </div>
                }
            </div>
        </div>

        <div id="SIMACTIVATE" class="tab-pane fade" role="tabpanel" style="padding-left:20px;">
            <div class="form-horizontal">
                @using (Html.BeginForm("ReactivateOrderSIM", "ManualOrder", FormMethod.Post))
                {
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">

                        @Html.DropDownListFor(model => Model.VerserOrderID, Model.DispatchedOrderListItems, "Select Verser Order", new { @class = "form-control", @id = "ddlSIMActivateOrderID", @multiple = "multiple" })<br /><br />
                        <div class="col-md-10">
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="UPDATE" class="btn btn-default" />
                        </div>
                    </div>
                }
            </div>
        </div>

        <div id="SHOPIFYORDS" class="tab-pane fade" role="tabpanel" style="padding-left:20px;">
            <div class="form-horizontal">
                <table class="table table-bordered" table-responsive table-hover" style="font-size:smaller" id="SHOPIFYORDERSTable">
                    <thead style="background-color:#959ca1;color:white">
                        <tr>
                            <th>Order</th>
                            <th>Job</th>
                            <th>TIABOrder</th>
                            <th>SKU</th>
                            <th>Customer</th>
                            <th>Address</th>
                            <th>Suburb</th>
                            <th>State</th>
                            <th>Postcode</th>
                            <th>Status</th>
                            <th>OrderType</th>
                            <th>Date</th>
                            <th>Source</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in Model.OrdersList)
                        {
                            <tr>

                                <td>@Html.DisplayFor(modelItem => item.VerserOrderID)</td>
                                <td>@Html.DisplayFor(modelItem => item.JMS_JobNo)</td>
                                <td>@Html.DisplayFor(modelItem => item.TIABOrderID)</td>
                                <td><a href="javascript:ShowSKU('@item.SKU')">@item.SKU</a></td>
                                <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                                <td>@Html.DisplayFor(modelItem => item.AddressLine1)</td>
                                <td>@Html.DisplayFor(modelItem => item.Locality)</td>
                                <td>@Html.DisplayFor(modelItem => item.State)</td>
                                <td>@Html.DisplayFor(modelItem => item.Postcode)</td>
                                <td>@Html.DisplayFor(modelItem => item.OrderStatus)</td>
                                <td>@Html.DisplayFor(modelItem => item.OrderType)</td>
                                <td>@Html.DisplayFor(modelItem => item.OrderDate)</td>
                                <td>@Html.DisplayFor(modelItem => item.OrderSource)</td>
                                <td>
                                    <input type="button" class="btn btn-success btn-sm"  value="APPROVE" onclick="ApproveOnOrder(@item.VerserOrderID);">                                   
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

    </div>
</div>
<link href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.1.1/css/mdb.min.css" rel="stylesheet">
@*<link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha.3/css/bootstrap.min.css" rel="stylesheet">*@
<link href="~/Content/bootstrap-3.1.4.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.4.1.js"></script>
<script src="~/Scripts/bootstrap-multiselect.js"></script>
<link href="~/Scripts/bootstrap-multiselect.css" rel="stylesheet" />
<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.2/themes/smoothness/jquery-ui.css" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.1.1/css/mdb.min.css" rel="stylesheet">
<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>


@section scripts
    {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>

    
    $(document).ready(function () {
        $('#SHOPIFYORDERSTable').DataTable();
        $('.dataTables_filter').addClass('pull-right');

        if ($("#hdnTabOrder").val() == "MORDER")
            $('a[href="#MORDER"]').click();
        else if ($("#hdnTabOrder").val() == "RORDER")
            $('a[href="#RORDER"]').click();
        else if ($("#hdnTabOrder").val() == "OHORDER")
            $('a[href="#OHORDER"]').click();
        else if ($("#hdnTabOrder").val() == "ONORDER")
            $('a[href="#ONORDER"]').click();
        else if ($("#hdnTabOrder").val() == "CORDER")
            $('a[href="#CORDER"]').click();
        else if ($("#hdnTabOrder").val() == "SIMACTIVATE")
            $('a[href="#SIMACTIVATE"]').click();
        else if ($("#hdnTabOrder").val() == "ROONLY")
            $('a[href="#ROONLY"]').click();
        else
            $('a[href="#MORDER"]').click();
    });

    $('#ddlOrderID').multiselect({
        includeSelectAllOption: false,
        maxHeight: 280,
        buttonWidth: '370px',
        enableFiltering: true,
        enableCaseInsensitiveFiltering: true
    });
    $('#ddlOrderID').removeAttr('multiple')
    $('#ddlOrderID').multiselect('rebuild');

    $('#ddlohOrderID').multiselect({
        includeSelectAllOption: false,
        maxHeight: 280,
        buttonWidth: '370px',
        enableFiltering: true,
        enableCaseInsensitiveFiltering: true
    });
    $('#ddlohOrderID').removeAttr('multiple')
    $('#ddlohOrderID').multiselect('rebuild');

    $('#ddlONOrderID').multiselect({
        includeSelectAllOption: false,
        maxHeight: 280,
        buttonWidth: '370px',
        enableFiltering: true,
        enableCaseInsensitiveFiltering: true
    });
    $('#ddlONOrderID').removeAttr('multiple')
    $('#ddlONOrderID').multiselect('rebuild');

    $('#ddlSIMActivateOrderID').multiselect({
        includeSelectAllOption: false,
        maxHeight: 280,
        buttonWidth: '370px',
        enableFiltering: true,
        enableCaseInsensitiveFiltering: true
    });
    $('#ddlSIMActivateOrderID').removeAttr('multiple')
    $('#ddlSIMActivateOrderID').multiselect('rebuild');

    $('#ddlReturnOrderID').multiselect({
        includeSelectAllOption: false,
        maxHeight: 280,
        buttonWidth: '370px',
        enableFiltering: true,
        enableCaseInsensitiveFiltering: true
    });
    $('#ddlReturnOrderID').removeAttr('multiple')
    $('#ddlReturnOrderID').multiselect('rebuild');
    function HideShowModal() {

        $.ajax({
            type: "GET",
            url: "./ShowModal",
            success: function (data) {
                $.confirm({
                    boxWidth: '800px',
                    useBootstrap: false,
                    title: '',
                    content: data,
                    closeIcon: true,

                    buttons: {
                        yes: { isHidden: true }
                    },
                });

            }
        });

    }

    function ApproveOnOrder(VerserOrderID) {

        alert("APPROVED",VerserOrderID);

        //$.ajax({
        //    type: "GET",
        //    url: "./ShowModal",
        //    success: function (data) {
        //        $.confirm({
        //            boxWidth: '800px',
        //            useBootstrap: false,
        //            title: '',
        //            content: data,
        //            closeIcon: true,

        //            buttons: {
        //                yes: { isHidden: true }
        //            },
        //        });

        //    }
        //});

    }

</script>
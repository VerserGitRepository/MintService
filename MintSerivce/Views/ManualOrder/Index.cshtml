@model MintSerivce.Models.ManualOrderModel
@{
    ViewBag.Title = "Index";
}


<div class="container" style="width:100%; padding-top:20px">

    <ul class="nav nav-tabs" style="padding-top:15px;" id="myTab">
        <li class="active"><a data-toggle="tab" href="#MORDER">MANUAL ORDER</a></li>
        <li><a data-toggle="tab" href="#RORDER">RETURN & REPLACE</a></li>
        <li><a data-toggle="tab" href="#OHORDER">UPDATE ON HOLD</a></li>
        <li><a data-toggle="tab" href="#ONORDER">UPDATE  ON ORDER</a></li>
        <li><a data-toggle="tab" href="#CORDER">CANCEL ORDER</a></li>
        <li><a data-toggle="tab" href="#SIMACTIVATE">SIM REACTIVATE</a></li>
        <li><a data-toggle="tab" href="#SHOPIFYORDS">SHOPIFY ORDER</a></li>
    </ul>
    <div class="tab-content" style="border-width:thin;border-style:solid;border-color:gray;width:110%;padding-top:5px;">

        @*<div class="form-group" style="padding-left:20px;color:orange;width:auto;align-items:center;text-align:center;">
                @if (Model.ResultMessage != null)
                    {
                        <p><h5> @Model.ResultMessage</h5></p>
                    }
            </div>*@
        <input class="hidden" type="text" id="hdnTabOrder" value="@TempData["TabOrder"]" />
        <div id="MORDER" class="tab-pane fade in active" role="tabpanel" style="text-align:left;padding-left:20px;">

            @using (Html.BeginForm("Index", "ManualOrder", FormMethod.Post))
            {
                <div class="container" style="padding-top:20px;color:gray">

                    <div>
                        @if (TempData["ManualOrder"] != null)
                        {
                            <h6 style="color:green;text-align:center">@TempData["ManualOrder"].ToString()</h6>
                        }
                        @if (TempData["OrderError"] != null)
                        {
                            <h6 style="color:red;text-align:center">@TempData["OrderError"].ToString()</h6>
                        }
                    </div>
                    <div class="col-sm-6" style="padding-top:20px;">
                        <label>TIABOrderID:</label>
                        @Html.EditorFor(model => model.TIABOrderID, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                    </div>
                    <div class="col-sm-6" style="padding-top:20px;">
                        <label>VerserOrderID:</label>
                        @Html.EditorFor(model => model.VerserOrderID, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                    </div>
                    <div class="col-sm-6">
                        <label>FirstName:</label>
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Surname:</label>
                        @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Surname, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Salutation:</label>
                        @Html.EditorFor(model => model.Salutation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Salutation, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>AddressLine1:</label>
                        @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressLine1, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Suburb:</label>
                        @Html.EditorFor(model => model.Locality, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Locality, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>State:</label>
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.State, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>Postcode:</label>
                        @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Postcode, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>SKU:</label>
                        @Html.EditorFor(model => model.SKU, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SKU, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>ContactNumber:</label>
                        @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactNumber, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <label>OrderType:</label>
                        @Html.EditorFor(model => model.OrderType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OrderType, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        <button type="submit" class="btn btn-primary">Complete Order</button>
                    </div>
                </div>
            }

        </div>

        <div id="RORDER" class="tab-pane fade" role="tabpanel">

            @using (Html.BeginForm("ReturnedOrder", "ManualOrder", FormMethod.Post))
            {
                <div class="container" style="padding-top:10px;color:gray">
                    <div>
                        @if (TempData["ManualOrder"] != null)
                        {
                            <h6 style="color:green;text-align:center">@TempData["ManualOrder"].ToString()</h6>
                        }
                        @if (TempData["OrderError"] != null)
                        {
                            <h6 style="color:red;text-align:center">@TempData["OrderError"].ToString()</h6>
                        }
                    </div>
                    <div class="well">
                        <div class="row">
                            <div class="col-sm-3">
                                <label>CustomerID:</label>
                                @Html.EditorFor(model => model.ReturnReplacementModel.CustomerID, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                                @Html.ValidationMessageFor(model => model.ReturnReplacementModel.CustomerID, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-3">
                                <label>Customer Tracking To Verser:</label>
                                @Html.EditorFor(model => model.ReturnReplacementModel.TrackingNumberFromCustomerToVerser, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Postcode, null, new { @class = "text-danger" })
                            </div>

                            <div class="col-sm-3">
                                <label>VerserOrderID:</label>
                                @Html.DropDownListFor(model => Model.ReturnReplacementModel.VerserOrderID, Model.DispatchedOrderListItems, "Select Verser Order", new { @class = "form-control", @id = "ddlReturnOrderID", @multiple = "multiple", style = "width:150px;" })
                                @Html.ValidationMessageFor(model => model.ReturnReplacementModel.VerserOrderID, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row" style="padding-top:0px">
                            <div class="col-sm-4">
                                <label>Date Expected return:</label>
                                @Html.EditorFor(model => model.ReturnReplacementModel.DateOfExpectedReturn, new { htmlAttributes = new { @class = "form-control date-picker", Id = "DateOfExpectedReturn" } })
                                @Html.ValidationMessageFor(model => model.ReturnReplacementModel.DateOfExpectedReturn, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-4">
                                <label>Date OF Purchase:</label>
                                @Html.EditorFor(model => model.ReturnReplacementModel.DateOfPurchase, new { htmlAttributes = new { @class = "form-control date-picker", Id = "DateOfPurchase" } })
                                @Html.ValidationMessageFor(model => model.ReturnReplacementModel.DateOfPurchase, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-4">
                                <label>Date OF Return Organised:</label>
                                @Html.EditorFor(model => model.ReturnReplacementModel.DateOfReturnOrganised, new { htmlAttributes = new { @class = "form-control date-picker", Id = "DateOfPurchase" } })
                                @Html.ValidationMessageFor(model => model.ReturnReplacementModel.DateOfPurchase, null, new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>
                    <div class="well">
                        <div class="row" style="padding-top:10px">
                            <div class="col-sm-4">
                                <label>Return Type:</label>
                                @Html.DropDownListFor(model => model.ReturnReplacementModel.ReturnType, new List<SelectListItem>
                                 {
                                new SelectListItem{Text="Return",Value="Return"},
                                new SelectListItem{Text="Swap",Value="Swap"},
                                new SelectListItem{Text="Warranty",Value="Warranty"},
                                new SelectListItem{Text="Shopify Return",Value="Shopify Return"},
                                new SelectListItem{Text="Shopify Swap",Value="Shopify Swap"},
                                new SelectListItem{Text="Shopify Warranty",Value="Shopify Warranty"}
                                 }, "Return Type", new { @class = "form-control", style = "Height:40px" })
                            </div>
                            <div class="col-sm-4">
                                <label>Cooling off Period:</label>
                                @Html.DropDownListFor(model => model.ReturnReplacementModel.CoolingOffPeriod, new List<SelectListItem>
                                {
                               new SelectListItem{Text="Yes",Value="Yes"},
                               new SelectListItem{Text="No",Value="No"}

                            }, "Cooling off Period", new { @class = "form-control", style = "Height:40px" })
                                @Html.ValidationMessageFor(model => model.ReturnReplacementModel.CoolingOffPeriod, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-4">
                                <label>Number Of Days Returned Receive:</label>
                                @Html.DropDownListFor(m => m.ReturnReplacementModel.NumberofdaysReturnedReceive, Enumerable.Range(1, 90).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ReturnReplacementModel.NumberofdaysReturnedReceive, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row" style="padding-top:10px">

                            <div class="col-sm-3">
                                <label>Verser Tracking To Customer:</label>
                                @Html.EditorFor(model => model.ReturnReplacementModel.TrackingNumberToCustomer, new
                                 {
                                    htmlAttributes = new { @class = "form-control" }
                                 })
                                @Html.ValidationMessageFor(model => model.ReturnReplacementModel.TrackingNumberToCustomer, null, new { @class = "text-danger" })
                            </div>

                            <div class="col-sm-3">
                                <label style="padding-bottom:10px;">Replacement Sent:</label>
                                @Html.DropDownListFor(model => model.ReturnReplacementModel.IsReplaced, new List<SelectListItem>
                              {
                             new SelectListItem{Text="Yes",Value="Yes"},
                             new SelectListItem{Text="No",Value="No"}

                              }, "Replacement Sent", new { @class = "form-control", style = "Height:40px" })
                                @Html.ValidationMessageFor(model => model.ContactNumber, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-3" style="padding-top:0px;color:lightsalmon">
                                <label>Replacement Required:</label>
                                @Html.CheckBoxFor(model => model.ReturnReplacementModel.IsReplacementRequired, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ContactNumber, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-3" style="padding-top:0px;color:lightsalmon">
                                <label>New Address?</label>
                                @Html.CheckBoxFor(model => model.ReturnReplacementModel.ReplacementTONewAddress, new { htmlAttributes = new { @class = "form-control" }, @onchange = "HideShowModal(this);" })
                                @Html.ValidationMessageFor(model => model.ReturnReplacementModel.ReplacementTONewAddress, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row" style="padding-top:10px;color:lightsalmon">
                            <div class="col-sm-3">
                                <label>SMS Reminder</label>
                                @Html.DropDownListFor(model => model.ReturnReplacementModel.SMSReminder, new List<SelectListItem>
                              {
                             new SelectListItem{Text="Yes",Value="Yes"},
                             new SelectListItem{Text="No",Value="No"},
                              new SelectListItem{Text="Multiple Contacts",Value="Multiple Contacts"}
                              }, "SMS Reminder", new { @class = "form-control", style = "Height:40px" })
                            </div>
                            <div class="col-sm-4">
                                <label>New SKU?</label>
                                @Html.CheckBoxFor(model => model.ReturnReplacementModel.ReplacementToNewSKU, new { htmlAttributes = new { @class = "form-control" }, onchange = "ShowddlSKUType(this);" })

                                @Html.DropDownListFor(model => model.ReturnReplacementModel.SKU, Model.SKUList, "Select SKU", new { @class = "form-control", style = "Height:40px", @id = "ddlSKUType", @disabled = "disabled" })

                                @Html.ValidationMessageFor(model => model.SKU, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-5">
                                <label>New OrderType?</label>
                                @Html.CheckBoxFor(model => model.ReturnReplacementModel.ReplacementTONewOrderType, new { htmlAttributes = new { @class = "form-control" }, onchange = "ShowddlOrderType(this);" })
                                @Html.DropDownListFor(model => model.ReturnReplacementModel.OrderType, new List<SelectListItem>
                              {
                                          new SelectListItem{ Text="PhoneSim", Value = "PhoneSim" },
                                          new SelectListItem{ Text="PhoneOnly", Value = "PhoneOnly" },
                                          new SelectListItem{ Text="SimOnly", Value = "SimOnly" }
                              }, "Select OrderType", new { @class = "form-control", style = "Height:40px", @id = "ddlOrderType", @disabled = "disabled" })

                                @Html.ValidationMessageFor(model => model.OrderType, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div id="OrderNewAddressId" class="well">
                        <div class="row" style="padding-top:10px">
                            <div class="col-sm-2">
                                <label>Salutation:</label>
                                @Html.EditorFor(model => model.ReturnReplacementModel.Salutation, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Salutation, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-4">

                                <label>FirstName:</label>
                                @Html.EditorFor(model => model.ReturnReplacementModel.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-4">
                                <label>Surname:</label>
                                @Html.EditorFor(model => model.ReturnReplacementModel.Surname, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Surname, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-2">
                                <label>Contact No:</label>
                                @Html.EditorFor(model => model.ReturnReplacementModel.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ContactNumber, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row" style="padding-top:10px">

                            <div class="col-sm-4">
                                <label>Address:</label>
                                @Html.EditorFor(model => model.ReturnReplacementModel.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AddressLine1, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-4">
                                <label>Suburb:</label>
                                @Html.EditorFor(model => model.ReturnReplacementModel.Locality, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Locality, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-2">
                                <label>State:</label>
                                @Html.DropDownListFor(model => model.ReturnReplacementModel.State, new List<SelectListItem>
                                 {
                                             new SelectListItem{ Text="NSW", Value = "NSW" },
                                             new SelectListItem{ Text="QLD", Value = "QLD" },
                                             new SelectListItem{ Text="SA", Value = "SA" },
                                             new SelectListItem{ Text="TAS", Value = "TAS" },
                                             new SelectListItem{ Text="VIC", Value = "VIC" },
                                             new SelectListItem{ Text="WA", Value = "WA" },
                                             new SelectListItem{ Text="ACT", Value = "ACT" },
                                             new SelectListItem{ Text="NT", Value = "NT" }
                                 }, "State", new { @class = "form-control", style = "Height:40px" })
                                @Html.ValidationMessageFor(model => model.State, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-2">
                                <label>Postcode:</label>
                                @Html.EditorFor(model => model.ReturnReplacementModel.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Postcode, null, new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="row" @*style="padding-top:10px;"*@>
                        <div class="col-sm-8">
                            <label>Comments:</label>
                            @Html.EditorFor(model => model.ReturnReplacementModel.CustomerServiceComments, new { htmlAttributes = new { @class = "form-control", placeholder = "CustomerService Comments Here .." } })
                            @Html.ValidationMessageFor(model => model.ReturnReplacementModel.CustomerServiceComments, null, new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-4" style="padding-top:20px;">
                            <button type="submit" class="btn btn-success">SUBMIT RETURN</button>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div id="CORDER" class="tab-pane fade" role="tabpanel" style="padding-left:20px;">
            <div class="form-horizontal">
                @using (Html.BeginForm("CancelOrder", "ManualOrder", FormMethod.Post))
                {
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">

                        @Html.DropDownListFor(model => Model.VerserOrderID, Model.OrdersListItemModel, "Select Verser Order", new { @class = "form-control", @id = "ddlOrderID", @multiple = "multiple" })
                        <div class="col-md-10">
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Cancel Order" class="btn btn-default" />
                        </div>
                    </div>
                }
            </div>
        </div>
        <div id="OHORDER" class="tab-pane fade" role="tabpanel" style="padding-left:20px;">
            <div class="form-horizontal">
                @using (Html.BeginForm("OrderPutOnHold", "ManualOrder", FormMethod.Post))
                {
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">

                        @Html.DropDownListFor(model => Model.VerserOrderID, Model.OrdersListItemModel, "Select Verser Order", new { @class = "form-control", @id = "ddlohOrderID", @multiple = "multiple" })<br /><br />
                        <div class="col-md-10">
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="UPDATE" class="btn btn-default" />
                        </div>
                    </div>
                }
            </div>
        </div>
        <div id="ONORDER" class="tab-pane fade" role="tabpanel" style="padding-left:20px;">
            <div class="form-horizontal">
                @using (Html.BeginForm("UpdateToOnOrder", "ManualOrder", FormMethod.Post))
                {
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">

                        @Html.DropDownListFor(model => Model.VerserOrderID, Model.OrdersListItemModel, "Select Verser Order", new { @class = "form-control", @id = "ddlONOrderID", @multiple = "multiple" })<br /><br />
                        <div class="col-md-10">
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="UPDATE" class="btn btn-default" />
                        </div>
                    </div>
                }
            </div>
        </div>
        <div id="SIMACTIVATE" class="tab-pane fade" role="tabpanel" style="padding-left:20px;">
            <div class="form-horizontal">
                @using (Html.BeginForm("ReactivateOrderSIM", "ManualOrder", FormMethod.Post))
                {
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">

                        @Html.DropDownListFor(model => Model.VerserOrderID, Model.DispatchedOrderListItems, "Select Verser Order", new { @class = "form-control", @id = "ddlSIMActivateOrderID", @multiple = "multiple" })<br /><br />
                        <div class="col-md-10">
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="UPDATE" class="btn btn-default" />
                        </div>
                    </div>
                }
            </div>
        </div>

        <div id="SHOPIFYORDS" class="tab-pane fade" role="tabpanel" style="padding-left:20px;">
            <div class="form-horizontal">
                <table class="table table-bordered" table-responsive table-hover" style="font-size:smaller" id="SHOPIFYORDERSTable">
                    <thead style="background-color:#959ca1;color:white">
                        <tr>
                            <th>Order</th>
                            <th>Job</th>
                            <th>TIABOrder</th>
                            <th>SKU</th>
                            <th>Customer</th>
                            <th>Address</th>
                            <th>Suburb</th>
                            <th>State</th>
                            <th>Postcode</th>
                            <th>Status</th>
                            <th>OrderType</th>
                            <th>Date</th>
                            <th>Source</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in Model.OrdersList)
                        {
                            <tr>

                                <td>@Html.DisplayFor(modelItem => item.VerserOrderID)</td>
                                <td>@Html.DisplayFor(modelItem => item.JMS_JobNo)</td>
                                <td>@Html.DisplayFor(modelItem => item.TIABOrderID)</td>
                                <td><a href="javascript:ShowSKU('@item.SKU')">@item.SKU</a></td>
                                <td>@Html.DisplayFor(modelItem => item.FirstName) &nbsp; @Html.DisplayFor(modelItem => item.Surname) </td>
                                <td>@Html.DisplayFor(modelItem => item.AddressLine1)</td>
                                <td>@Html.DisplayFor(modelItem => item.Locality)</td>
                                <td>@Html.DisplayFor(modelItem => item.State)</td>
                                <td>@Html.DisplayFor(modelItem => item.Postcode)</td>
                                <td>@Html.DisplayFor(modelItem => item.OrderStatus)</td>
                                <td>@Html.DisplayFor(modelItem => item.OrderType)</td>
                                <td>@Html.DisplayFor(modelItem => item.OrderDate)</td>
                                <td>@Html.DisplayFor(modelItem => item.OrderSource)</td>
                                <td>
                                    <input type="button" class="btn btn-success btn-sm" value="APPROVE" onclick="ApproveOnOrder('@item.VerserOrderID');">
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

    </div>
</div>

<link href="~/Content/bootstrap-3.1.4.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.4.1.js"></script>
<script src="~/Scripts/bootstrap-multiselect.js"></script>
<link href="~/Scripts/bootstrap-multiselect.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.1.1/css/mdb.min.css" rel="stylesheet">


<style>

    /*<button type="button" class="multiselect dropdown-toggle btn btn-default" style="width: 100%; overflow: hidden; text-overflow: ellipsis;">*/
</style>

@section scripts
    {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Scripts/jquery-ui-1.12.1.min.js")"></script>
    <script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>
    <script src="~/Scripts/datatables.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.2/jquery-ui.min.js"></script>

    <script src="~/Scripts/confirm.js"></script>
    <link href="~/Content/confirm.css" rel="stylesheet" />
    <script src="~/Scripts/bootstrap-multiselect.js"></script>
    <link href="~/Scripts/bootstrap-multiselect.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.1.1/css/mdb.min.css" rel="stylesheet">
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

    <script>
        $(document).ready(function () {
            $('#SHOPIFYORDERSTable').DataTable();
            //$('.dataTables_filter').addClass('pull-right');

            if ($("#hdnTabOrder").val() == "MORDER")
                $('a[href="#MORDER"]').click();
            else if ($("#hdnTabOrder").val() == "RORDER")
                $('a[href="#RORDER"]').click();
            else if ($("#hdnTabOrder").val() == "OHORDER")
                $('a[href="#OHORDER"]').click();
            else if ($("#hdnTabOrder").val() == "ONORDER")
                $('a[href="#ONORDER"]').click();
            else if ($("#hdnTabOrder").val() == "CORDER")
                $('a[href="#CORDER"]').click();
            else if ($("#hdnTabOrder").val() == "SIMACTIVATE")
                $('a[href="#SIMACTIVATE"]').click();
            else if ($("#hdnTabOrder").val() == "ROONLY")
                $('a[href="#ROONLY"]').click();
            else
                $('a[href="#MORDER"]').click();
        });

        $('#ddlOrderID').multiselect({
            includeSelectAllOption: false,
            maxHeight: 280,
            buttonWidth: '370px',
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true
        });
        $('#ddlOrderID').removeAttr('multiple')
        $('#ddlOrderID').multiselect('rebuild');

        $('#ddlohOrderID').multiselect({
            includeSelectAllOption: false,
            maxHeight: 280,
            buttonWidth: '370px',
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true
        });
        $('#ddlohOrderID').removeAttr('multiple')
        $('#ddlohOrderID').multiselect('rebuild');

        $('#ddlONOrderID').multiselect({
            includeSelectAllOption: false,
            maxHeight: 280,
            buttonWidth: '370px',
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true
        });
        $('#ddlONOrderID').removeAttr('multiple')
        $('#ddlONOrderID').multiselect('rebuild');

        $('#ddlSIMActivateOrderID').multiselect({
            includeSelectAllOption: false,
            maxHeight: 280,
            buttonWidth: '370px',
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true
        });
        $('#ddlSIMActivateOrderID').removeAttr('multiple')
        $('#ddlSIMActivateOrderID').multiselect('rebuild');

        $('#ddlReturnOrderID').multiselect({
            includeSelectAllOption: false,
            maxHeight: 280,
            buttonWidth: '370px',
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true
        });
        $('#ddlReturnOrderID').removeAttr('multiple')
        $('#ddlReturnOrderID').multiselect('rebuild');
        function HideShowModal(control) {
            var firstConfirm = null;
            if (($(control)[0]).checked) {
                $("#OrderNewAddressId").show(1000);

            }
            else {
                $("#OrderNewAddressId").hide(1000);
            }
        }

        function ShowddlOrderType(control) {

            $("#ddlOrderType").prop("disabled", ($(control)[0]).checked == false);

        }
        function ShowddlSKUType(control) {
            $('#ddlSKUType').prop("disabled", ($(control)[0]).checked == false);
        }

        function ApproveOnOrder(VerserOrderID) {

        $.ajax({
            type: "GET",
            data: { "VerserOrderID": VerserOrderID },
            url: "./ApproveOnOrder",
            success: function (response) {
                $.alert({
                    title: 'ORDER APPROVED !',
                    content: '',
                    confirm: function () {
                    }
                });
            }
        });
    }
</script>

}
